#deposited here today the 28th nov 21
var trace%, fr, x, fr2, results%, average%;
var hpol, negstep, ri, tau, capac, accept;
results%:= FileNew(1,1);
trace%:=FileOpen("",0,1);
average%:=SetAverage(-1);
WindowVisible(1);
ProcessFrames("1-20",-1,0,1,1,0,1);
FrontView(average%);
hpol:= ChanMeasure(1,2,0,0.1) - ChanMeasure(1,2,0.55,0.6);
negstep:= ChanMeasure(2,2,0,0.1) - ChanMeasure(2,2,0.55,0.6);
ri:= 1000*hpol/negstep;
cursorset(2,0.202,0.25);
accept:= 0;
while accept=0 do
interact ("Set fit region",7);
ChanFit (1,1,1);
chanfit(1,1,-2,cursor(1),cursor(2));
ChanFitShow(1,1);
accept:=Input("If fit is good enter 1, if bad enter 0",0);
wend;
tau:= 1000*ChanFitcoef(1,1);
capac:=tau/ri*1000;
FileSaveAs("?",0);
FrontView(results%);
Print("Input Resistance\t", ri,"\ntau\t", tau,"\nCapacitance\t", capac);
FrontView(trace%);
fr:=0;
x:= -25;
while x <-20 do
    fr:= fr+1;
FrontView(trace%);
Frame(fr);
x:=ChanMeasure(1,7,0,0.9);
wend;
var rheobase%;
rheobase%:= (ChanMeasure(2,2,0,0.1) - ChanMeasure(2,2,0.55,0.6))/10;
var halfahp, APamp, AHPhalf, AHPamp, AHPtrough, peak1, threshold1, halfwidth1, peaktrough;
CursorSet(8);
Xrange(0,1);
Optimise(1);
CursorMode(1,14);
CursorActiveSet(1,1,.1502,xhigh(),30000);
Cursormode(2,8);
CursorActiveSet(2,1,cursor(1),xhigh(),ChanValue(1,cursor(1)));
CursorMode(3,1);
CursorActiveSet(3,1,cursor(1),cursor(2));
peak1:= ChanValue(1,cursor(3));
threshold1:= ChanValue(1,cursor(1));
CursorMode(4,7);
CursorActiveSet(4,1,cursor(1),Cursor(2),((peak1-threshold1)*.5)+threshold1,0,0,"");
CursorMode(5,8);
CursorActiveSet(5,1,cursor(1),Cursor(2),((peak1-threshold1)*.5)+threshold1,0,0,"");
CursorMode(6,14);
CursorActiveSet(6,1,"Cursor(2)","XHigh()","0",1,0.0005,"");
AHPtrough:=ChanValue(1,cursor(6));
CursorMode(7,8);
CursorActiveSet(7,1,cursor(2),xhigh(),((threshold1-AHPtrough)*.5)+AHPtrough,0,0,"");
CursorMode(8,7);
CursorActiveSet(8,1,cursor(6),xhigh(),((threshold1-AHPtrough)*.5)+AHPtrough,0,0,"");
halfwidth1:=(cursor(5)-cursor(4))*1000;
peaktrough:=(cursor(6)-cursor(3))*1000;
AHPhalf:=(cursor(8)-cursor(7))*1000;
AHPamp:=threshold1-AHPtrough;
APamp:=peak1-threshold1;

FrontView(results%);
Print("AP halfwidth\t", halfwidth1, "\nAHP halfwidth\t", AHPhalf, "\nThreshold\t", threshold1, "\nAP to AHP\t", peaktrough);
Print("\nAP Amplitude\t", APamp, "\nAHP Amplitude\t", AHPamp, "\nAP Peak\t", peak1);
FrontView(trace%);
fr2:= ((fr-22)*2+22);
frame(fr2);
var graph%, n;
var t1, t2, t3, tpenult, tlast, y, f1, f2, flast, adratlast, adrat2nd;
FrontView(trace%);
graph%:=MeasureToXY(4,1,"MinTime()","MaxTime()",0.002,"0.0",20,0,"",3,"0.0");
MeasureX(102,1,"Cursor(0)","0",0);
MeasureY(100,1,"Cursor(0)","0",0);
MeasureChan(1,"Channel 1",0);
WindowVisible(1);
ProcessFrames(-2,-1,-1,0,1,1,0,1);
FrontView(graph%);
n:= XYcount(1);
XYGetData(1,t1,y);
XYGetData(1,t2,y,1);
XYGetData(1,t3,y,2);
XYGetData(1,tpenult,y,n-2);
XYGetData(1,tlast,y,n-1);
FrontView(results%);
f1:= 1/(t2-t1);
f2:= 1/(t3-t2);
flast:= 1/(tlast-tpenult);
adrat2nd:= f2/f1;
adratlast:= flast/f1;

Print("1ST Spike\t", fr, "\ndouble thresh\t", fr2);
Print("\nrheobase\t", -10*rheobase%);
Print("Number of Spikes\t", n, "\nTime of first AP\t", t1*1000, "\nInst Freq 1\t", f1,"\nInst Freq 2nd\t", f2, "\nInst Freq last\t", flast);
Print("\n1st 2nd Adaptation Ratio\t", adrat2nd, "\n1st Last Adaptation Ratio\t", adratlast);
FrontView(graph%);
FileClose(0,-1);
FrontView(trace%);
Frame(1);

#script by M I Daw
